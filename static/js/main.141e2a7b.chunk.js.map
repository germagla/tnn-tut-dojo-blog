{"version":3,"sources":["Navbar.js","BlogList.js","useFetch.js","Home.js","Create.js","BlogDetails.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","to","BlogList","blogs","title","map","blog","id","author","toUpperCase","useFetch","url","useState","data","setData","isPending","setIsPending","error","setError","useEffect","abortCont","AbortController","setTimeout","fetch","signal","headers","then","res","ok","Error","json","console","log","catch","err","name","message","abort","Home","Create","setTitle","body","setBody","setAuthor","history","useHistory","onSubmit","e","preventDefault","method","JSON","stringify","r","push","type","required","value","onChange","target","event","disabled","BlogDetails","useParams","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAeeA,MAZf,SAAgBC,GACZ,OACI,sBAAKC,UAAU,SAAf,UACI,+CACA,sBAAKA,UAAU,QAAf,UACI,cAAC,IAAD,CAAMC,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,UAAT,6BCUDC,EAhBE,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,MAEtB,OACI,sBAAKJ,UAAU,YAAf,UACI,6BAAKI,IACJD,EAAME,KAAI,SAACC,GAAD,OACP,qBAAKN,UAAU,eAAf,SACI,eAAC,IAAD,CAAMC,GAAE,iBAAYK,EAAKC,IAAzB,UACI,6BAAKD,EAAKF,QACV,4CAAeE,EAAKE,OAAOC,qBAHAH,EAAKC,W,OC+BzCG,MAtCf,SAAkBC,GAAM,IAAD,EACKC,mBAAS,MADd,mBACZC,EADY,KACNC,EADM,OAEeF,oBAAS,GAFxB,mBAEZG,EAFY,KAEDC,EAFC,OAGOJ,mBAAS,MAHhB,mBAGZK,EAHY,KAGLC,EAHK,KAmCnB,OA9BAC,qBAAU,WACN,IAAMC,EAAY,IAAIC,gBA0BtB,OAxBAC,YAAW,kBAAMC,MAAMZ,EAAK,CACxBa,OAAQJ,EAAUI,OAClBC,QAAS,CACL,eAAgB,aAGnBC,MAAK,SAAAC,GACF,IAAKA,EAAIC,GAAI,MAAMC,MAAM,4BACzB,OAAOF,EAAIG,UAEdJ,MAAK,SAAAb,GACFkB,QAAQC,IAAInB,GACZG,GAAa,GACbF,EAAQD,MAEXoB,OAAM,SAAAC,GACc,eAAbA,EAAIC,KAAuBJ,QAAQC,IAAI,kBAEvCd,EAASgB,EAAIE,SACbpB,GAAa,SAGjB,KAED,kBAAMI,EAAUiB,WACxB,CAAC1B,IAEG,CAACE,OAAME,YAAWE,UCpBdqB,EAbF,WAAO,IAAD,EAEyB5B,EAAS,sDAApCP,EAFE,EAERU,KAAaE,EAFL,EAEKA,UAAWE,EAFhB,EAEgBA,MAE/B,OACI,sBAAKjB,UAAU,OAAf,UACKiB,GAAS,8BAAK,6BAAKA,MACnBF,GAAa,8BAAK,8CAClBZ,GAAS,cAAC,EAAD,CAAUA,MAAOA,EAAOC,MAAO,kB,OCyDtCmC,MAlEf,WAAmB,IAAD,EACY3B,mBAAS,IADrB,mBACPR,EADO,KACAoC,EADA,OAEU5B,mBAAS,IAFnB,mBAEP6B,EAFO,KAEDC,EAFC,OAGc9B,mBAAS,SAHvB,mBAGPJ,EAHO,KAGCmC,EAHD,OAIoB/B,oBAAS,GAJ7B,mBAIPG,EAJO,KAIIC,EAJJ,KAKR4B,EAAUC,cAwBhB,OACI,sBAAK7C,UAAU,SAAf,UACI,sDACA,uBAAM8C,SAzBO,SAACC,GAClB/B,GAAa,GAEb+B,EAAEC,iBACF,IAAM1C,EAAO,CAACF,QAAOqC,OAAMjC,UAC3BuB,QAAQC,IAAI1B,GACZgB,YAAW,WACPC,MAAM,SAAU,CACZ0B,OAAQ,OACRxB,QAAS,CAAC,eAAgB,oBAC1BgB,KAAMS,KAAKC,UAAU7C,KACtBoB,MAAK,SAAA0B,GACJrB,QAAQC,IAAR,kBACAhB,GAAa,MACdiB,OAAM,SAAAC,GACLH,QAAQC,IAAIE,QAEjB,IAEHU,EAAQS,KAAK,MAMT,UACI,iDACA,uBACIC,KAAK,OACLC,UAAQ,EACRC,MAAOpD,EACPqD,SAAU,SAACV,GACPP,EAASO,EAAEW,OAAOF,UAG1B,+CACA,0BACID,UAAQ,EACRC,MAAOf,EACPgB,SAAU,SAACV,GACPL,EAAQK,EAAEW,OAAOF,UAIzB,4CACA,yBAAQA,MAAOhD,EAAQiD,SAAW,SAAAE,GAC9BhB,EAAUgB,EAAMD,OAAOF,QAD3B,UAGI,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,sBAEHzC,EAAY,wBAAQ6C,UAAQ,EAAhB,4BAA2C,qDCtCzDC,MAlBf,SAAqB9D,GAAQ,IAClBQ,EAAMuD,cAANvD,GADiB,EAEeG,EAAS,sDAAwDH,GAA3FD,EAFW,EAEjBO,KAAYI,EAFK,EAELA,MAAOF,EAFF,EAEEA,UAC1B,OACI,sBAAKf,UAAU,eAAf,UACKiB,GAAS,8BAAK,6BAAKA,MACnBF,GAAa,8BAAK,8CAClBT,GACD,oCACI,6BAAKA,EAAKF,QACV,4CAAeE,EAAKE,OAAOC,iBAC3B,8BAAMH,EAAKmC,cCaZsB,MAxBf,WACI,OACI,cAAC,IAAD,UACI,sBAAK/D,UAAU,MAAf,UACI,cAAC,EAAD,IACA,qBAAKA,UAAU,UAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOgE,OAAK,EAACC,KAAK,sBAAlB,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAQA,KAAK,4BAAb,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,+BAAZ,SACI,cAAC,EAAD,iBCRbC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1C,MAAK,YAAkD,IAA/C2C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.141e2a7b.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nfunction Navbar(props) {\n    return (\n        <nav className=\"navbar\">\n            <h1>The Dojo Blog</h1>\n            <div className=\"links\">\n                <Link to=\"/\">Home</Link>\n                <Link to=\"/create\">New Post</Link>\n            </div>\n        </nav>\n    );\n}\n\nexport default Navbar;","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nconst BlogList = ({blogs, title}) => {\n\n    return (\n        <div className=\"blog-list\">\n            <h1>{title}</h1>\n            {blogs.map((blog) =>\n                <div className=\"blog-preview\" key={blog.id}>\n                    <Link to={`/blogs/${blog.id}`}>\n                        <h2>{blog.title}</h2>\n                        <p>Written by {blog.author.toUpperCase()}</p>\n                    </Link>\n                </div>)}\n        </div>\n    );\n};\n\nexport default BlogList;\n\n","import {useEffect, useState} from 'react';\n\nfunction useFetch(url) {\n    const [data, setData] = useState(null);\n    const [isPending, setIsPending] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const abortCont = new AbortController();\n\n        setTimeout(() => fetch(url, {\n            signal: abortCont.signal,\n            headers: {\n                \"Request-mode\": \"no-cors\",\n            }\n        })\n            .then(res => {\n                if (!res.ok) throw Error(\"Problem with the request\");\n                return res.json()\n            })\n            .then(data => {\n                console.log(data);\n                setIsPending(false);\n                setData(data);\n            })\n            .catch(err => {\n                if (err.name === \"AbortError\") console.log(\"fetch aborted\")\n                else {\n                    setError(err.message);\n                    setIsPending(false);\n                }\n\n            }), 1000);\n\n        return () => abortCont.abort();\n    }, [url]);\n\n    return {data, isPending, error}\n}\n\nexport default useFetch;","import BlogList from \"./BlogList\";\nimport useFetch from \"./useFetch\";\n\n\nconst Home = () => {\n\n    const {data: blogs, isPending, error} = useFetch(\"https://mysterious-eyrie-58576.herokuapp.com/blogs\");\n\n    return (\n        <div className=\"home\">\n            {error && <div><h1>{error}</h1></div>}\n            {isPending && <div><h1>Loading...</h1></div>}\n            {blogs && <BlogList blogs={blogs} title={\"All Blogs\"} />}\n        </div>\n    )\n};\n\nexport default Home;","import React, {useState} from 'react';\nimport {useHistory} from \"react-router-dom\";\n\nfunction Create() {\n    const [title, setTitle] = useState('');\n    const [body, setBody] = useState('');\n    const [author, setAuthor] = useState('Mario');\n    const [isPending, setIsPending] = useState(false);\n    const history = useHistory();\n\n    const handleSubmit = (e) => {\n        setIsPending(true);\n\n        e.preventDefault();\n        const blog = {title, body, author};\n        console.log(blog);\n        setTimeout(() => {\n            fetch(\"/blogs\", {\n                method: 'POST',\n                headers: {\"Content-Type\": \"application/json\",},\n                body: JSON.stringify(blog),\n            }).then(r => {\n                console.log(`new blog added`);\n                setIsPending(false);\n            }).catch(err => {\n                console.log(err)\n            });\n        }, 10);\n        //history.go(-1);\n        history.push('/');\n    };\n\n    return (\n        <div className=\"create\">\n            <h2>Create new blog post</h2>\n            <form onSubmit={handleSubmit}>\n                <label>Blog Title: </label>\n                <input\n                    type=\"text\"\n                    required\n                    value={title}\n                    onChange={(e) => {\n                        setTitle(e.target.value)\n                    }}\n                />\n                <label>Blog Body:</label>\n                <textarea\n                    required\n                    value={body}\n                    onChange={(e) => {\n                        setBody(e.target.value)\n                    }}\n\n                />\n                <label>Author:</label>\n                <select value={author} onChange={(event => {\n                    setAuthor(event.target.value)\n                })}>\n                    <option value=\"Mario\">Mario</option>\n                    <option value=\"Yoshi\">Yoshi</option>\n                    <option value=\"Luigi\">Luigi</option>\n                </select>\n                {isPending ? <button disabled>Adding Blog...</button> : <button>Add Blog</button>}\n\n            </form>\n        </div>\n    );\n}\n\nexport default Create;","import React from 'react';\nimport {useParams} from \"react-router-dom\";\nimport useFetch from \"./useFetch\";\nimport BlogList from \"./BlogList\";\nimport {Link} from \"react-router-dom\";\n\nfunction BlogDetails(props) {\n    const {id} = useParams();\n    const {data: blog, error, isPending} = useFetch('https://mysterious-eyrie-58576.herokuapp.com/blogs/' + id)\n    return (\n        <div className=\"blog-details\">\n            {error && <div><h1>{error}</h1></div>}\n            {isPending && <div><h1>Loading...</h1></div>}\n            {blog &&\n            <article>\n                <h2>{blog.title}</h2>\n                <p>Written by {blog.author.toUpperCase()}</p>\n                <div>{blog.body}</div>\n            </article>}\n\n        </div>\n    );\n}\n\nexport default BlogDetails;","import Navbar from \"./Navbar\";\nimport Home from \"./Home\";\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Create from \"./Create\";\nimport BlogDetails from \"./BlogDetails\";\n\nfunction App() {\n    return (\n        <Router>\n            <div className=\"App\">\n                <Navbar/>\n                <div className=\"content\">\n                    <Switch>\n                        <Route exact path=\"/tnn-tut-dojo-blog/\">\n                            <Home/>\n                        </Route>\n                        <Route  path=\"/tnn-tut-dojo-blog/create\">\n                            <Create/>\n                        </Route>\n                        <Route path=\"/tnn-tut-dojo-blog/blogs/:id\">\n                            <BlogDetails/>\n                        </Route>\n\n                    </Switch>\n                </div>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}